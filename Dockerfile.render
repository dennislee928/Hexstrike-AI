# Optimized Dockerfile for Render deployment
# Build timestamp: 2025-10-25T01:40:00Z - Force rebuild
FROM python:3.11-slim

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    HEXSTRIKE_PORT=8888 \
    HEXSTRIKE_HOST=0.0.0.0 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    build-essential \
    libssl-dev \
    libffi-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Install essential security tools (lightweight versions)
RUN apt-get update && apt-get install -y \
    nmap \
    curl \
    wget \
    netcat-traditional \
    dnsutils \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements-minimal.txt requirements.txt
RUN pip install --upgrade pip setuptools wheel && \
    pip install -r requirements.txt

# Copy application files
COPY hexstrike_server.py hexstrike_mcp.py ./

# Create necessary directories and files
RUN mkdir -p /app/logs /app/data /app/config /app/assets /app/templates /app/static /app/api

# Create minimal API structure
RUN echo '{"version": "6.0", "status": "minimal"}' > /app/api/__init__.py

# Create basic entrypoint
RUN echo '#!/bin/bash\necho "Starting HexStrike AI (Render)..."\nexec python3 hexstrike_server.py --port ${PORT:-8888}' > /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Expose port (Render uses PORT env var)
EXPOSE ${PORT:-8888}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8888}/health || exit 1

# Start the application
CMD ["/entrypoint.sh"]